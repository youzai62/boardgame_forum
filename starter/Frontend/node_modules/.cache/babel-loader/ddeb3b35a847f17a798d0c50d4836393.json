{"ast":null,"code":"const {\n  JWTClaimInvalid\n} = require('../errors');\n\nconst secs = require('../help/secs');\n\nconst epoch = require('../help/epoch');\n\nconst isObject = require('../help/is_object');\n\nconst verify = require('./verify');\n\nconst {\n  isString,\n  isRequired,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations');\n\nconst isPayloadRequired = isRequired.bind(undefined, JWTClaimInvalid);\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid);\nconst isOptionString = isString.bind(undefined, TypeError);\n\nconst defineLazyExportWithWarning = (obj, property, name, definition) => {\n  Object.defineProperty(obj, property, {\n    enumerable: true,\n    configurable: true,\n\n    value() {\n      process.emitWarning(`The ${name} API implements an IETF draft. Breaking draft implementations are included as minor versions of the jose library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.`, 'DraftWarning');\n      Object.defineProperty(obj, property, {\n        enumerable: true,\n        configurable: true,\n        value: definition\n      });\n      return obj[property](...arguments);\n    }\n\n  });\n};\n\nconst validateCommonOptions = (options, profile) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object');\n  }\n\n  if (!options.issuer) {\n    throw new TypeError(`\"issuer\" option is required to validate ${profile}`);\n  }\n\n  if (!options.audience) {\n    throw new TypeError(`\"audience\" option is required to validate ${profile}`);\n  }\n};\n\nmodule.exports = {\n  IdToken: {\n    verify: function (token, key) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      validateCommonOptions(options, 'an ID Token');\n\n      if ('maxAuthAge' in options) {\n        isOptionString(options.maxAuthAge, 'options.maxAuthAge');\n      }\n\n      if ('nonce' in options) {\n        isOptionString(options.nonce, 'options.nonce');\n      }\n\n      const unix = epoch(options.now || new Date());\n      const result = verify(token, key, { ...options\n      });\n      const payload = options.complete ? result.payload : result;\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n        isPayloadRequired(payload.azp, '\"azp\" claim', 'azp');\n      }\n\n      isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n      isPayloadRequired(payload.sub, '\"sub\" claim', 'sub');\n      isPayloadRequired(payload.exp, '\"exp\" claim', 'exp');\n      isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge);\n      isPayloadString(payload.nonce, '\"nonce\" claim', 'nonce', !!options.nonce);\n      isPayloadString(payload.acr, '\"acr\" claim', 'acr');\n      isStringOrArrayOfStrings(payload.amr, 'amr');\n\n      if (options.nonce && payload.nonce !== options.nonce) {\n        throw new JWTClaimInvalid('unexpected \"nonce\" claim value', 'nonce', 'check_failed');\n      }\n\n      const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0;\n\n      if (options.maxAuthAge) {\n        const maxAuthAgeSeconds = secs(options.maxAuthAge);\n\n        if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n          throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed');\n        }\n      }\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1 && payload.azp !== options.audience) {\n        throw new JWTClaimInvalid('unexpected \"azp\" claim value', 'azp', 'check_failed');\n      }\n\n      return result;\n    }\n  },\n  LogoutToken: {},\n  AccessToken: {}\n};\ndefineLazyExportWithWarning(module.exports.LogoutToken, 'verify', 'jose.JWT.LogoutToken.verify', function (token, key) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  validateCommonOptions(options, 'a Logout Token');\n  const result = verify(token, key, { ...options\n  });\n  const payload = options.complete ? result.payload : result;\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti');\n  isPayloadString(payload.sid, '\"sid\" claim', 'sid');\n\n  if (!('sid' in payload) && !('sub' in payload)) {\n    throw new JWTClaimInvalid('either \"sid\" or \"sub\" (or both) claims must be present');\n  }\n\n  if ('nonce' in payload) {\n    throw new JWTClaimInvalid('\"nonce\" claim is prohibited', 'nonce', 'prohibited');\n  }\n\n  if (!('events' in payload)) {\n    throw new JWTClaimInvalid('\"events\" claim is missing', 'events', 'missing');\n  }\n\n  if (!isObject(payload.events)) {\n    throw new JWTClaimInvalid('\"events\" claim must be an object', 'events', 'invalid');\n  }\n\n  if (!('http://schemas.openid.net/event/backchannel-logout' in payload.events)) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim', 'events', 'invalid');\n  }\n\n  if (!isObject(payload.events['http://schemas.openid.net/event/backchannel-logout'])) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object', 'events', 'invalid');\n  }\n\n  return result;\n});\ndefineLazyExportWithWarning(module.exports.AccessToken, 'verify', 'jose.JWT.AccessToken.verify', function (token, key) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  validateCommonOptions(options, 'a JWT Access Token');\n  isOptionString(options.maxAuthAge, 'options.maxAuthAge');\n  const unix = epoch(options.now || new Date());\n  const typ = 'at+JWT';\n  const result = verify(token, key, { ...options,\n    typ\n  });\n  const payload = options.complete ? result.payload : result;\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n  isPayloadRequired(payload.exp, '\"exp\" claim', 'exp');\n  isPayloadRequired(payload.sub, '\"sub\" claim', 'sub');\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti');\n  isPayloadString(payload.client_id, '\"client_id\" claim', 'client_id', true);\n  isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge);\n  isPayloadString(payload.acr, '\"acr\" claim', 'acr');\n  isStringOrArrayOfStrings(payload.amr, 'amr');\n  const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0;\n\n  if (options.maxAuthAge) {\n    const maxAuthAgeSeconds = secs(options.maxAuthAge);\n\n    if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n      throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed');\n    }\n  }\n\n  return result;\n});","map":{"version":3,"sources":["C:/Users/zhuji/Desktop/heroku_sample/starter/Frontend/node_modules/jose/lib/jwt/profiles.js"],"names":["JWTClaimInvalid","require","secs","epoch","isObject","verify","isString","isRequired","isTimestamp","isStringOrArrayOfStrings","isPayloadRequired","bind","undefined","isPayloadString","isOptionString","TypeError","defineLazyExportWithWarning","obj","property","name","definition","Object","defineProperty","enumerable","configurable","value","process","emitWarning","validateCommonOptions","options","profile","issuer","audience","module","exports","IdToken","token","key","maxAuthAge","nonce","unix","now","Date","result","payload","complete","Array","isArray","aud","length","azp","iat","sub","exp","auth_time","acr","amr","tolerance","clockTolerance","maxAuthAgeSeconds","LogoutToken","AccessToken","jti","sid","events","typ","client_id"],"mappings":"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","sourcesContent":["const { JWTClaimInvalid } = require('../errors')\nconst secs = require('../help/secs')\nconst epoch = require('../help/epoch')\nconst isObject = require('../help/is_object')\n\nconst verify = require('./verify')\nconst {\n  isString,\n  isRequired,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations')\n\nconst isPayloadRequired = isRequired.bind(undefined, JWTClaimInvalid)\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid)\nconst isOptionString = isString.bind(undefined, TypeError)\n\nconst defineLazyExportWithWarning = (obj, property, name, definition) => {\n  Object.defineProperty(obj, property, {\n    enumerable: true,\n    configurable: true,\n    value (...args) {\n      process.emitWarning(\n        `The ${name} API implements an IETF draft. Breaking draft implementations are included as minor versions of the jose library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.`,\n        'DraftWarning'\n      )\n      Object.defineProperty(obj, property, {\n        enumerable: true,\n        configurable: true,\n        value: definition\n      })\n      return obj[property](...args)\n    }\n  })\n}\n\nconst validateCommonOptions = (options, profile) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  if (!options.issuer) {\n    throw new TypeError(`\"issuer\" option is required to validate ${profile}`)\n  }\n\n  if (!options.audience) {\n    throw new TypeError(`\"audience\" option is required to validate ${profile}`)\n  }\n}\n\nmodule.exports = {\n  IdToken: {\n    verify: (token, key, options = {}) => {\n      validateCommonOptions(options, 'an ID Token')\n\n      if ('maxAuthAge' in options) {\n        isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n      }\n      if ('nonce' in options) {\n        isOptionString(options.nonce, 'options.nonce')\n      }\n\n      const unix = epoch(options.now || new Date())\n      const result = verify(token, key, { ...options })\n      const payload = options.complete ? result.payload : result\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n        isPayloadRequired(payload.azp, '\"azp\" claim', 'azp')\n      }\n      isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n      isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n      isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n      isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n      isPayloadString(payload.nonce, '\"nonce\" claim', 'nonce', !!options.nonce)\n      isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n      isStringOrArrayOfStrings(payload.amr, 'amr')\n\n      if (options.nonce && payload.nonce !== options.nonce) {\n        throw new JWTClaimInvalid('unexpected \"nonce\" claim value', 'nonce', 'check_failed')\n      }\n\n      const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n      if (options.maxAuthAge) {\n        const maxAuthAgeSeconds = secs(options.maxAuthAge)\n        if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n          throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n        }\n      }\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1 && payload.azp !== options.audience) {\n        throw new JWTClaimInvalid('unexpected \"azp\" claim value', 'azp', 'check_failed')\n      }\n\n      return result\n    }\n  },\n  LogoutToken: {},\n  AccessToken: {}\n}\n\ndefineLazyExportWithWarning(module.exports.LogoutToken, 'verify', 'jose.JWT.LogoutToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a Logout Token')\n\n  const result = verify(token, key, { ...options })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.sid, '\"sid\" claim', 'sid')\n\n  if (!('sid' in payload) && !('sub' in payload)) {\n    throw new JWTClaimInvalid('either \"sid\" or \"sub\" (or both) claims must be present')\n  }\n\n  if ('nonce' in payload) {\n    throw new JWTClaimInvalid('\"nonce\" claim is prohibited', 'nonce', 'prohibited')\n  }\n\n  if (!('events' in payload)) {\n    throw new JWTClaimInvalid('\"events\" claim is missing', 'events', 'missing')\n  }\n\n  if (!isObject(payload.events)) {\n    throw new JWTClaimInvalid('\"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  if (!('http://schemas.openid.net/event/backchannel-logout' in payload.events)) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim', 'events', 'invalid')\n  }\n\n  if (!isObject(payload.events['http://schemas.openid.net/event/backchannel-logout'])) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  return result\n})\n\ndefineLazyExportWithWarning(module.exports.AccessToken, 'verify', 'jose.JWT.AccessToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a JWT Access Token')\n\n  isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n\n  const unix = epoch(options.now || new Date())\n  const typ = 'at+JWT'\n  const result = verify(token, key, { ...options, typ })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n  isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.client_id, '\"client_id\" claim', 'client_id', true)\n  isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n  isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n  isStringOrArrayOfStrings(payload.amr, 'amr')\n\n  const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n  if (options.maxAuthAge) {\n    const maxAuthAgeSeconds = secs(options.maxAuthAge)\n    if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n      throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n    }\n  }\n\n  return result\n})\n"]},"metadata":{},"sourceType":"script"}