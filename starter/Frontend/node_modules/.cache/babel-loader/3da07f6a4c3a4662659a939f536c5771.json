{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhuji\\\\Desktop\\\\heroku_sample\\\\starter\\\\Frontend\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport Replyline from './Replyline';\nimport $ from 'jquery';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPost = id => {\n      $.ajax({\n        url: \"/posts/\".concat(id, \"?page=\").concat(this.state.page),\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            subject: result.subject,\n            content: result.content,\n            replies: result.replies,\n            totalReplies: result.total_replies\n          });\n        },\n        error: error => {\n          alert('Unable to load posts. Please try your request again');\n        }\n      });\n    };\n\n    this.deleteAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the reply?')) {\n          $.ajax({\n            url: \"/replies/\".concat(id),\n            //TODO: update request URL\n            type: \"DELETE\",\n            success: result => {\n              this.componentDidMount();\n            },\n            error: error => {\n              alert('Unable to load post. Please try your request again');\n            }\n          });\n        }\n      }\n    };\n\n    this.state = {\n      post_id: 0,\n      subject: '',\n      content: '',\n      replies: [],\n      page: 1,\n      totalReplies: 0\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.getPost(id);\n  }\n\n  //Select speicific page\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getPost());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalReplies / 5);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(React.createElement(\"span\", {\n        key: i,\n        className: \"page-num \".concat(i === this.state.page ? 'active' : ''),\n        onClick: () => {\n          this.selectPage(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, i));\n    }\n\n    return pageNumbers;\n  } //Delete a specific reply\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"post-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.subject), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.content), this.state.replies.map((r, ind) => React.createElement(Replyline, {\n      key: r.id,\n      subject: r.content,\n      deleteAction: this.deleteAction(r.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pagination-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.createPagination())));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:\\Users\\zhuji\\Desktop\\heroku_sample\\starter\\Frontend\\src\\components\\Post.js"],"names":["React","Component","Replyline","$","Post","constructor","props","getPost","id","ajax","url","state","page","type","success","result","setState","subject","content","replies","totalReplies","total_replies","error","alert","deleteAction","action","window","confirm","componentDidMount","post_id","match","params","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","map","r","ind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Replyline from './Replyline';\r\nimport $ from 'jquery';\r\n\r\nclass Post extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        post_id: 0,\r\n        subject:'',\r\n        content:'',\r\n        replies: [],\r\n        page: 1,\r\n        totalReplies: 0\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { id } = this.props.match.params\r\n      this.getPost(id);\r\n    }\r\n\r\n    getPost = (id) => {\r\n        $.ajax({\r\n          url: `/posts/${id}?page=${this.state.page}`, //TODO: update request URL\r\n          type: \"GET\",\r\n          success: (result) => {\r\n            this.setState({\r\n              subject: result.subject,\r\n              content: result.content,\r\n              replies: result.replies,\r\n              totalReplies: result.total_replies\r\n            })\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load posts. Please try your request again')\r\n          }\r\n        })\r\n    }\r\n\r\n    //Select speicific page\r\n    selectPage(num) {\r\n        this.setState({page: num}, () => this.getPost());\r\n    }\r\n\r\n    createPagination(){\r\n        let pageNumbers = [];\r\n        let maxPage = Math.ceil(this.state.totalReplies / 5)\r\n        for (let i = 1; i <= maxPage; i++) {\r\n          pageNumbers.push(\r\n            <span\r\n              key={i}\r\n              className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n              onClick={() => {this.selectPage(i)}}>{i}\r\n            </span>)\r\n        }\r\n        return pageNumbers;\r\n    }\r\n\r\n    //Delete a specific reply\r\n    deleteAction = (id) => (action) => {\r\n      if(action === 'DELETE') {\r\n        if(window.confirm('are you sure you want to delete the reply?')) {\r\n          $.ajax({\r\n            url: `/replies/${id}`, //TODO: update request URL\r\n            type: \"DELETE\",\r\n            success: (result) => {\r\n              this.componentDidMount();\r\n            },\r\n            error: (error) => {\r\n              alert('Unable to load post. Please try your request again')\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"post-view\">\r\n            <div className=\"posts-list\">\r\n              <h2>{this.state.subject}</h2>\r\n              <h4>{this.state.content}</h4>\r\n              {this.state.replies.map((r, ind) => (\r\n                <Replyline\r\n                  key={r.id}\r\n                  subject={r.content}\r\n                  deleteAction={this.deleteAction(r.id)}\r\n                />\r\n              ))}\r\n              <div className=\"pagination-menu\">\r\n                {this.createPagination()}\r\n              </div>\r\n            </div> \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}