{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhuji\\\\Desktop\\\\heroku_sample\\\\starter\\\\Frontend\\\\src\\\\components\\\\UpdateForm.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../css/FormView.css';\n\nclass UpdateForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPost = id => {\n      $.ajax({\n        url: `/posts/${id}`,\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            post_id: result.post_id,\n            subject: result.subject,\n            content: result.content\n          });\n        },\n        error: error => {\n          alert('Unable to load posts. Please try your request again');\n        }\n      });\n    };\n\n    this.updatePost = event => {\n      event.preventDefault();\n      $.ajax({\n        url: `/posts/${this.state.post_id}`,\n        //TODO: update request URL\n        type: \"PATCH\",\n        dataType: 'json',\n        contentType: 'application/json',\n        headers: {\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\n        },\n        data: JSON.stringify({\n          subject: this.state.subject,\n          content: this.state.content\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.props.history.push(`/posts/${this.state.post_id}`);\n        },\n        error: error => {\n          alert('Unable to create post. Please try your request again');\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      post_id: 0,\n      subject: \"\",\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    console.log(id);\n    this.getPost(id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Update the Post\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"create-post-form\",\n      onSubmit: this.updatePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }\n    }), \"Subject:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"subject\",\n      placeholder: this.state.subject,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }\n    }), \"Summary:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      name: \"content\",\n      placeholder: this.state.content,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default UpdateForm;","map":{"version":3,"sources":["C:/Users/zhuji/Desktop/heroku_sample/starter/Frontend/src/components/UpdateForm.js"],"names":["React","Component","$","UpdateForm","constructor","props","getPost","id","ajax","url","type","success","result","setState","post_id","subject","content","error","alert","updatePost","event","preventDefault","state","dataType","contentType","headers","sessionStorage","getItem","data","JSON","stringify","xhrFields","withCredentials","crossDomain","history","push","handleChange","target","name","value","componentDidMount","match","params","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../css/FormView.css';\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post_id: 0,\r\n            subject: \"\",\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        console.log(id);\r\n        this.getPost(id);\r\n    }\r\n\r\n    getPost = (id) => {\r\n        $.ajax({\r\n            url: `/posts/${id}`, //TODO: update request URL\r\n            type: \"GET\",\r\n            success: (result) => {\r\n                this.setState({\r\n                    post_id: result.post_id,\r\n                    subject: result.subject,\r\n                    content: result.content\r\n                })\r\n            },\r\n            error: (error) => {\r\n                alert('Unable to load posts. Please try your request again')\r\n            }\r\n        })\r\n    }\r\n\r\n    updatePost = (event) => {\r\n        event.preventDefault();\r\n        $.ajax({\r\n            url: `/posts/${this.state.post_id}`, //TODO: update request URL\r\n            type: \"PATCH\",\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n            data: JSON.stringify({\r\n                subject: this.state.subject,\r\n                content: this.state.content\r\n            }),\r\n            xhrFields: {\r\n                withCredentials: true\r\n            },\r\n            crossDomain: true,\r\n            success: (result) => {\r\n                this.props.history.push(`/posts/${this.state.post_id}`)\r\n            },\r\n            error: (error) => {\r\n                alert('Unable to create post. Please try your request again')\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"add-form\">\r\n                <h2>Update the Post</h2>\r\n                <form className=\"form-view\" id=\"create-post-form\" onSubmit={this.updatePost}>\r\n                    <label><br></br>Subject:<br></br></label>\r\n                    <input type=\"text\" name=\"subject\" placeholder={this.state.subject} onChange={this.handleChange} />\r\n                    <label><br></br>Summary:<br></br></label>\r\n                    <textarea rows='10' name=\"content\" placeholder={this.state.content} onChange={this.handleChange} />\r\n                    <input type=\"submit\" className=\"button\" value=\"Update\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}