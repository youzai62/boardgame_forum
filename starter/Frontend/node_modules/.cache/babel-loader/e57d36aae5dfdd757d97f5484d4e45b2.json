{"ast":null,"code":"var _user,\n    _jsxFileName = \"C:\\\\Users\\\\zhuji\\\\Desktop\\\\heroku_sample\\\\starter\\\\Frontend\\\\src\\\\components\\\\FormView.js\";\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport $ from 'jquery';\nimport '../css/FormView.css';\nuseEffect(() => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const {\n    user,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userMetadata, setUserMetadata] = useState(null);\n\n  const getUserMetadata = async () => {\n    try {\n      const accessToken = await getAccessTokenSilently({\n        audience: `https://${domain}/api/v2/`,\n        scope: \"read:current_user\"\n      });\n      console.log(accessToken);\n      const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n      const metadataResponse = await fetch(userDetailsByIdUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const {\n        user_metadata\n      } = await metadataResponse.json();\n      setUserMetadata(user_metadata);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  getUserMetadata();\n}, [getAccessTokenSilently, (_user = user) === null || _user === void 0 ? void 0 : _user.sub]);\n\nclass FormView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitPost = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/posts',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          subject: this.state.subject,\n          content: this.state.content\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.props.history.push('/posts');\n        },\n        error: error => {\n          alert('Unable to create post. Please try your request again');\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      subject: \"\",\n      content: \"\",\n      token: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Create A New Post\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"create-post-form\",\n      onSubmit: this.submitPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }\n    }), \"Subject:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"subject\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }), \"Summary:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      name: \"content\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["C:/Users/zhuji/Desktop/heroku_sample/starter/Frontend/src/components/FormView.js"],"names":["React","Component","useState","useEffect","useAuth0","$","domain","process","env","REACT_APP_AUTH0_DOMAIN","user","getAccessTokenSilently","userMetadata","setUserMetadata","getUserMetadata","accessToken","audience","scope","console","log","userDetailsByIdUrl","sub","metadataResponse","fetch","headers","Authorization","user_metadata","json","e","message","FormView","constructor","props","submitPost","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","subject","state","content","xhrFields","withCredentials","crossDomain","success","result","history","push","error","alert","handleChange","setState","target","name","value","token","render"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport $ from 'jquery';\r\nimport '../css/FormView.css';\r\n\r\nuseEffect(() => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const { user, getAccessTokenSilently } = useAuth0();\r\n  const [userMetadata, setUserMetadata] = useState(null);\r\n  const getUserMetadata = async () => {\r\n    try {\r\n      const accessToken = await getAccessTokenSilently({\r\n        audience: `https://${domain}/api/v2/`,\r\n        scope: \"read:current_user\",\r\n      });\r\n      console.log(accessToken);\r\n      const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\r\n\r\n      const metadataResponse = await fetch(userDetailsByIdUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n\r\n      const { user_metadata } = await metadataResponse.json();\r\n\r\n      setUserMetadata(user_metadata);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  getUserMetadata();\r\n}, [getAccessTokenSilently, user?.sub]);\r\n\r\nclass FormView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      subject: \"\",\r\n      content: \"\",\r\n      token: \"\"\r\n    }\r\n  }\r\n\r\n  submitPost = (event) => {\r\n    event.preventDefault();\r\n\r\n    $.ajax({\r\n      url: '/posts', //TODO: update request URL\r\n      type: \"POST\",\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        subject: this.state.subject,\r\n        content: this.state.content\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.props.history.push('/posts')\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to create post. Please try your request again')\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"add-form\">\r\n        <h2>Create A New Post</h2>\r\n        <form className=\"form-view\" id=\"create-post-form\" onSubmit={this.submitPost}>\r\n          <label><br></br>Subject:<br></br></label>\r\n          <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\r\n          <label><br></br>Summary:<br></br></label>\r\n          <textarea rows='10' name=\"content\" onChange={this.handleChange}/>\r\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;"]},"metadata":{},"sourceType":"module"}