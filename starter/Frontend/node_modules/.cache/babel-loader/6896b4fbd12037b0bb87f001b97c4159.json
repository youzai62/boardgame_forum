{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lru_cache_1 = __importDefault(require(\"lru-cache\"));\n\nvar events_1 = require(\"events\");\n\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\n\nvar freeze_1 = require(\"./freeze\");\n\nfunction syncMemoizer(options) {\n  var cache = new lru_cache_1.default(options);\n  var load = options.load;\n  var hash = options.hash;\n  var bypass = options.bypass;\n  var itemMaxAge = options.itemMaxAge;\n  var freeze = options.freeze;\n  var clone = options.clone;\n  var emitter = new events_1.EventEmitter();\n  var defaultResult = Object.assign({\n    del: del,\n    reset: function () {\n      return cache.reset();\n    },\n    keys: cache.keys.bind(cache),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter)\n  }, options);\n\n  if (options.disable) {\n    return Object.assign(load, defaultResult);\n  }\n\n  function del() {\n    var key = hash.apply(void 0, __spread(arguments));\n    cache.del(key);\n  }\n\n  function emit(event) {\n    var parameters = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parameters[_i - 1] = arguments[_i];\n    }\n\n    emitter.emit.apply(emitter, __spread([event], parameters));\n  }\n\n  function isPromise(result) {\n    // detect native, bluebird, A+ promises\n    return result && result.then && typeof result.then === 'function';\n  }\n\n  function processResult(result) {\n    var res = result;\n\n    if (clone) {\n      if (isPromise(res)) {\n        res = res.then(lodash_clonedeep_1.default);\n      } else {\n        res = lodash_clonedeep_1.default(res);\n      }\n    }\n\n    if (freeze) {\n      if (isPromise(res)) {\n        res = res.then(freeze_1.deepFreeze);\n      } else {\n        freeze_1.deepFreeze(res);\n      }\n    }\n\n    return res;\n  }\n\n  var result = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (bypass && bypass.apply(void 0, __spread(args))) {\n      emit.apply(void 0, __spread(['miss'], args));\n      return load.apply(void 0, __spread(args));\n    }\n\n    var key = hash.apply(void 0, __spread(args));\n    var fromCache = cache.get(key);\n\n    if (fromCache) {\n      emit.apply(void 0, __spread(['hit'], args));\n      return processResult(fromCache);\n    }\n\n    emit.apply(void 0, __spread(['miss'], args));\n    var result = load.apply(void 0, __spread(args));\n\n    if (itemMaxAge) {\n      // @ts-ignore\n      cache.set(key, result, itemMaxAge.apply(void 0, __spread(args.concat([result]))));\n    } else {\n      cache.set(key, result);\n    }\n\n    return processResult(result);\n  };\n\n  return Object.assign(result, defaultResult);\n}\n\nexports.syncMemoizer = syncMemoizer;","map":{"version":3,"mappings":"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","names":["syncMemoizer","options","cache","lru_cache_1","load","hash","bypass","itemMaxAge","freeze","clone","emitter","events_1","defaultResult","Object","assign","del","reset","keys","bind","on","once","disable","key","__spread","arguments","emit","event","parameters","apply","isPromise","result","then","processResult","res","lodash_clonedeep_1","freeze_1","args","fromCache","get","set","concat","exports"],"sourceRoot":"","sources":["../src/sync.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}