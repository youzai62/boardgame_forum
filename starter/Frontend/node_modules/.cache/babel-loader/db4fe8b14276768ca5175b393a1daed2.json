{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhuji\\\\Desktop\\\\heroku_sample\\\\starter\\\\Frontend\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport Replyline from './Replyline';\nimport $ from 'jquery';\nimport '../css/Post.css';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPost = id => {\n      $.ajax({\n        url: `/posts/${id}?page=${this.state.page}`,\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            post_id: result.post_id,\n            subject: result.subject,\n            content: result.content,\n            replies: result.replies,\n            totalReplies: result.total_replies\n          });\n        },\n        error: error => {\n          alert('Unable to load posts. Please try your request again');\n        }\n      });\n    };\n\n    this.deleteAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the reply?')) {\n          $.ajax({\n            url: `/replies/${id}`,\n            //TODO: update request URL\n            type: \"DELETE\",\n            success: result => {\n              this.componentDidMount();\n            },\n            error: error => {\n              alert('Unable to load post. Please try your request again');\n            }\n          });\n        }\n      }\n    };\n\n    this.submitReply = id => event => {\n      event.preventDefault();\n      $.ajax({\n        url: `/posts/${id}`,\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          content: this.state.reply_content\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          window.location.reload();\n        },\n        error: error => {\n          alert('Unable to create reply. Please try your request again');\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      post_id: 0,\n      subject: '',\n      content: '',\n      reply_content: '',\n      replies: [],\n      page: 1,\n      totalReplies: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.getPost(id);\n  }\n\n  //Select speicific page\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getPost(this.state.post_id));\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalReplies / 5);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, i));\n    }\n\n    return pageNumbers;\n  } //Delete a specific reply\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, this.state.subject), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Post-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, this.state.content)), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"reply-view\",\n      id: \"create-reply-form\",\n      onSubmit: this.submitReply(this.state.post_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 24\n      }\n    }), \"Reply:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      name: \"reply_content\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    })), this.state.replies.map((r, ind) => /*#__PURE__*/React.createElement(Replyline, {\n      key: r.id,\n      id: r.id,\n      subject: r.content,\n      deleteAction: this.deleteAction(r.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, this.createPagination())));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/zhuji/Desktop/heroku_sample/starter/Frontend/src/components/Post.js"],"names":["React","Component","Replyline","$","Post","constructor","props","getPost","id","ajax","url","state","page","type","success","result","setState","post_id","subject","content","replies","totalReplies","total_replies","error","alert","deleteAction","action","window","confirm","componentDidMount","submitReply","event","preventDefault","dataType","contentType","data","JSON","stringify","reply_content","xhrFields","withCredentials","crossDomain","location","reload","handleChange","target","name","value","match","params","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","map","r","ind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Replyline from './Replyline';\r\nimport $ from 'jquery';\r\nimport '../css/Post.css';\r\n\r\nclass Post extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        post_id: 0,\r\n        subject:'',\r\n        content:'',\r\n        reply_content:'',\r\n        replies: [],\r\n        page: 1,\r\n        totalReplies: 0\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { id } = this.props.match.params\r\n      this.getPost(id);\r\n    }\r\n\r\n    getPost = (id) => {\r\n        $.ajax({\r\n          url: `/posts/${id}?page=${this.state.page}`, //TODO: update request URL\r\n          type: \"GET\",\r\n          success: (result) => {\r\n            this.setState({\r\n              post_id: result.post_id,\r\n              subject: result.subject,\r\n              content: result.content,\r\n              replies: result.replies,\r\n              totalReplies: result.total_replies\r\n            })\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load posts. Please try your request again')\r\n          }\r\n        })\r\n    }\r\n\r\n    //Select speicific page\r\n    selectPage(num) {\r\n        this.setState({page: num}, () => this.getPost(this.state.post_id));\r\n    }\r\n\r\n    createPagination(){\r\n        let pageNumbers = [];\r\n        let maxPage = Math.ceil(this.state.totalReplies / 5)\r\n        for (let i = 1; i <= maxPage; i++) {\r\n          pageNumbers.push(\r\n            <span\r\n              key={i}\r\n              className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n              onClick={() => {this.selectPage(i)}}>{i}\r\n            </span>)\r\n        }\r\n        return pageNumbers;\r\n    }\r\n\r\n    //Delete a specific reply\r\n    deleteAction = (id) => (action) => {\r\n      if(action === 'DELETE') {\r\n        if(window.confirm('are you sure you want to delete the reply?')) {\r\n          $.ajax({\r\n            url: `/replies/${id}`, //TODO: update request URL\r\n            type: \"DELETE\",\r\n            success: (result) => {\r\n              this.componentDidMount();\r\n            },\r\n            error: (error) => {\r\n              alert('Unable to load post. Please try your request again')\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    submitReply = (id) => (event) => {\r\n      event.preventDefault();\r\n      $.ajax({\r\n        url: `/posts/${id}`, //TODO: update request URL\r\n        type: \"POST\",\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        data: JSON.stringify({\r\n          content: this.state.reply_content\r\n        }),\r\n        xhrFields: {\r\n          withCredentials: true\r\n        },\r\n        crossDomain: true,\r\n        success: (result) => {\r\n          window.location.reload()\r\n        },\r\n        error: (error) => {\r\n          alert('Unable to create reply. Please try your request again')\r\n        }\r\n      })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"post-view\">\r\n            <div className=\"posts-list\">\r\n              <h2>{this.state.subject}</h2>\r\n              <div className=\"Post-holder\">\r\n                <h4>{this.state.content}</h4>\r\n              </div>\r\n              <form className=\"reply-view\" id=\"create-reply-form\" onSubmit={this.submitReply(this.state.post_id)}>\r\n                <label><br></br>Reply:<br></br></label>\r\n                <textarea rows='10' name=\"reply_content\" onChange={this.handleChange}/>\r\n                <input type=\"submit\" className=\"button\" value=\"Submit\" />\r\n              </form>\r\n              {this.state.replies.map((r, ind) => (\r\n                <Replyline\r\n                  key={r.id}\r\n                  id={r.id}\r\n                  subject={r.content}\r\n                  deleteAction={this.deleteAction(r.id)}\r\n                />\r\n              ))}\r\n              <div className=\"pagination-menu\">\r\n                {this.createPagination()}\r\n              </div>\r\n            </div> \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}